server:
  port: ${PORT:8085}
  tomcat.max-threads: 800
  max-http-header-size: 102400

eureka:
  client:
    #    registerWithEureka: false
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://127.0.0.1:8083/eureka/

zuul:
  semaphore.maxSemaphores: 800
  routes:
    user-management:
      path: /user-management/**
      serviceId: user-management-service
      sensitiveHeaders:
    bot-management:
      path: /bot-management/**
      serviceId: bot-management-service
      sensitiveHeaders:
    analytics:
      path: /analytics/**
      serviceId: analytics-service
    logging:
      path: /logging/**
      serviceId: logging-service
    gsma:
      path: /gsma/**
      serviceId: gsma-service
    accounting:
      path: /accounting/**
      serviceId: accounting-service
    content-management:
      path: /content-management/**
      serviceId: content-management-service
    dimelo:
      path: /dimelo/**
      serviceId: dimelo-service
  ratelimit:
    enabled: true
    repository: JPA
    add-response-headers: true
    behind-proxy: true
    default-policy-list:
      - limit: 5
        refresh-interval: 60
    deny-request:
      response-status-code: 429
    strip-prefix: true


security:
  basic:
    enabled: false

ribbon:
  ReadTimeout: 60000
  ConnectionTimeout: 60000

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 125000

spring:
  http:
    multipart:
      enabled: true
      max-file-size: -1
      max-request-size: -1
  datasource:
    url: jdbc:postgresql://localhost:5432/combo-deleted-user
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  jpa:
    show-sql: false
    generate-ddl: false
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        default_schema: public
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    listener:
      simple:
        retry:
          enabled: true
          initial-interval: 1000
          max-attempts: 3
          max-interval: 10000
          multiplier: 2

feign:
  client:
    config:
      default:
        connectTimeout: 60000
        readTimeout: 60000


# Spring Boot Actuator
management.security.enabled: false

auth.publicKeyName: publicKey-dev

token.validitySeconds: 14400 # 4 hours